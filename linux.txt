1、Linux 上安装 Node.js
    wget https://nodejs.org/dist/v10.16.0/node-v10.16.0-linux-x64.tar.xz    // 下载
    tar xf node-v10.16.0-linux-x64.tar.xz                                   // 解压
    cd node-v10.16.0-linux-x64                                              // 进入解压目录
    解压文件的 bin 目录底下包含了 node、npm 等命令，我们可以修改linux系统的环境变量（profile）来设置直接运行命令：

    老规矩先备份，养成修改重要文件之前先备份的好习惯。

    cp /etc/profile /etc/profile.bak
    然后vim /etc/profile，在最下面添加 export PATH=$PATH: 后面跟上node下bin目录的路径

    export PATH=$PATH:/root/node-v10.16.0-linux-x64/bin

    立即生效
    source /etc/profile
    [root@localhost ~]# node -v
    v10.16.0


2、使用linux 的nohup命令让程序在后台运行

    之前买了台CentOS的Vps，操作的时候，发现运行一些自己的脚本的时候，一旦关闭终端，脚本的运行也会终止。
    为了让程序在后台继续运行，查了些资料，结果令人小鸡冻了一把，只要在命令前面加一个nohup就能解决了。

    比如，我启动koa的web服务的时候，就可以这样做：

    ## 正常情况下的执行
    node --harmony app.js

    ## 后台运行，不会因为断开终端而终止app
    nohup node --harmony app.js &

    ## 正常情况下的执行
    node --harmony app.js
    
    ## 后台运行，不会因为断开终端而终止app
    nohup node --harmony app.js &
    
    所有的终端输入都会被保存到当前目录的nohup.out文件中。

============================================
LINUX 常见的命令

1.lsb_release -a 查看linux 版本
2.uname -a 查看内核版本
3.df 查看磁盘空间的占用情况
  df -Th 以g为单位
4.top 查看cpu资源和内存资源

文件相关
1.新建文件夹 mkdir 文件夹名字
2.新建文件 touch 文件名字
3.查看文件的内容 cat 文件
4.输出内容到文件里  echo "wuyue " >> 文件的名字


查看防火墙放行的端口

firewall-cmd --list-all


1.查看镜像  docker images
2.运行服务 docker run -d --name 名称 -p 10050:27017 mongo:4
3.查看docker运行的服务 docker ps
4.设置防火墙白名单
firewall-cmd --zone=pblic --add-port=1050/tcp --permanent
5.设置生效 firewall-cmd --reload
6.查看防火墙状态 firewall-cmd --state
7删除node_modules  rimraf node_modules